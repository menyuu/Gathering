    .container
      .row
        .col-8
          .card.posts-area.rounded-0
            .card-body.row
              .col-8
                = link_to user_path(@post.user)
                  = image_tag @post.user.user_icon(50, 50), class: "rounded-circle"
                = link_to @post.user.name, user_path(@post.user), class: "user-name"
              ul.col-4.text-end.post-item-container
                - if current_end_user == @post.user
                  - if @post.status == "draft"
                    li.card-text.d-inline-block.post-item data-bs-toggle="modal" data-bs-target="#editPostModalToggle"
                      i.fa-solid.fa-pen-to-square data-bs-toggle="tooltip" data-bs-placement="right" title="クリックして投稿を編集"
                  - if @post.status == "published" or @post.status == "draft"
                    li.card-text.d-inline-block.post-item
                      = link_to post_tags_path(@post)
                        i.fa-solid.fa-tags data-bs-toggle="tooltip" data-bs-placement="right" title="クリックしてタグを編集"
                    li.card-text.d-inline-block.post-item-delete
                      = link_to post_path(@post), method: :delete, data: {"confirm": "本当に削除しますか？\r\nこの操作は取り消せません。\r\n実行後、投稿データは完全に削除されます。"}
                        i.fa-solid.fa-trash-can data-bs-toggle="tooltip" data-bs-placement="right" title="クリックして投稿を削除"
                      .modal.modal-lg.fade#editPostModalToggle tabindex="-1" aria-labelledby="editPostModalToggle" aria-hidden="true"
                        .modal-dialog.modal-dialog-centered
                          .modal-content
                            .modal-header
                              #editPostModalToggle
                              button.btn.modal-close-btn data-bs-dismiss="modal" aria-label="close"
                                span
                                  | ×
                            .modal-body
                              = form_with model: @post, local: false do |f|
                                = f.text_area :text, placeholder: "入力して投稿", class: "form-control border-0 border-bottom rounded-0 post-input-area"
                                .text-end.post-input-item
                                  .form-group.file-uploader-image.d-sm-inline-block
                                    = f.label :images
                                      i.fa-regular.fa-image
                                    = f.file_field :images, name: "post[images][]", multiple: true, style: "display: none;"
                                  .form-check.form-switch.d-sm-inline-block
                                    = f.check_box :status, {class: "form-check-input"}, "published", "draft"
                                    = f.label :status, "投稿を公開", class: "form-check-label"
                                  .form-group
                                    = f.text_field :name, value: @tag_names, placeholder: "複数のタグは半角のカンマ(,)で区切って入力してください。", class: "form-control border-0 border-bottom rounded-0 post-input-tag-area"
                                  .form-group.mt-3.text-end.post-input-item
                                    = f.submit "投稿する", class: "btn btn-sm btn-outline-dark rounded-pill px-sm-5 mb-3"
                            .modal-footer
                              button.btn.btn-secondary data-bs-dismiss="modal" 閉じる
              .card-body
                p.card-text.post-text
                  = @post.text
              .card-body
                .card-img.text-center
                  - @post.images.each do |image|
                    = link_to image, "data-lightbox": image
                      = image_tag image.variant(gravity: :center, resize:"200x200^", crop:"200x200+0+0").processed, class: "d-none d-sm-inline-block"
              .card-body
                .container
                  .card-text
                    - @post.tags.each do |tag|
                      = link_to tag.name, search_path(word: tag.name, object: "post_tag"), class: "btn btn-sm btn-dark rounded-pill tag-item"
                .card-text
                  = @post.created_at.strftime("%Y年%m月%d日 %H時%M分")
              ul.col-12.text-end.post-item-container
                - if @post.status == "published"
                  li.card-text.d-inline-block.post-item
                    a data-bs-toggle="modal" data-bs-target="#postComment#{@post.id}ModalToggle" data-link="postComment#{@post.id}ModalToggle"
                      i.fa-regular.fa-comment
                    = @post.post_comments.count
                - if @post.status == "published" or @post.status == "draft"
                  li.card-text.d-inline-block.post-item
                    div class="favorite_btn_#{@post.id}"
                      = render "end_user/favorites/favorite", post: @post
                  li.card-text.d-inline-block.post-item
                    = link_to post_path(@post)
                      = time_ago_in_words(@post.created_at)
                      | 前
              .modal.modal-lg.fade id="postComment#{@post.id}ModalToggle" tabindex="-1" aria-labelledby="postComment#{@post.id}ModalToggle" aria-hidden="true"
                .modal-dialog.modal-dialog-centered
                  .modal-content
                    .modal-header
                      div id="#postComment#{@post.id}ModalToggle"
                      button.btn.modal-close-btn data-bs-dismiss="modal" aria-label="close"
                        span
                          | ×
                    .modal-body
                      = link_to user_path(@post.user), class: "posts-area-user"
                        = image_tag @post.user.user_icon(50, 50), class: "rounded-circle"
                      = link_to @post.user.name, user_path(@post.user), class: "user-name"
                    .modal-body
                      = link_to post_path(@post)
                        p.card-text.post-text
                          = @post.text
                    .modal-body.text-center
                        - @post.images.first(4).each do |image|
                          = link_to image, "data-lightbox": image
                            = image_tag image.variant(gravity: :center, resize:"200x200^", crop:"200x200+0+0").processed, class: "d-none d-sm-inline-block"
                    .modal-body
                      = form_with model: @post_comment, url: post_comments_path(@post) do |f|
                        .form-group.mt-5
                        = f.text_area :text, placeholder: "コメントを入力", class: "form-control"
                        .text-end.mt-3
                          = f.submit "コメントを送信", class: "btn btn-outline-dark rounded-pill"
                    .modal-footer
                      button.btn.btn-secondary data-bs-dismiss="modal" 閉じる
              .card-body.col-10
                = form_with model: [@post, @post_comment], url: post_comments_path(@post) do |f|
                  .form-group.text-end
                    = f.text_area :text, placeholder: "コメントを入力", class: "form-control"
                    = f.submit "コメントを送信", class: "btn btn-outline-dark rounded-pill mt-3"
          .scroll-list.jscroll
            - @comments.each do |comment|
              #post-index
                .card.posts-area.rounded-0
                  .card-body.pb-0
                    = link_to user_path(comment.user), class: "posts-area-user"
                      = image_tag comment.user.user_icon(50, 50), class: "rounded-circle"
                      span.text-dark.ms-3
                        = comment.user.name
                    .card-body.p-0
                      .posts-area-text
                        .card-text.text-dark
                          = comment.text
                    .card-dody.my-3.d-flex.justify-content-end
                        .card-text
                          = @post.created_at.strftime("%Y年%m月%d日 %H時%M分")
                        .card-text.d-inline-block.post-item-time-path.ms-2
                          = time_ago_in_words(@post.created_at)
                          | 前
                        .card-text.ms-2
                          - if comment.user == current_end_user
                            = link_to "削除", post_comment_path(comment.post, comment), method: :delete, class: "post-item-edit-text text-danger", data: {"confirm": "本当に削除しますか？\r\nこの操作は取り消せません。\r\n実行後、投稿データは完全に削除されます。"}
              .skill-list
                = link_to_prev_page @comments, "前のページ", class: "prev d-none"
                = link_to_next_page @comments, "次のページ", class: "next d-none"
