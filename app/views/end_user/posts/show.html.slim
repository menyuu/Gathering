.container.ml-0
  .row
    .col-10.offset-2
      .card.posts-area.rounded-0
        .card-body.row
          .col-8
            = link_to user_path(@post.user)
              = image_tag @post.user.user_icon(80, 80), class: "rounded-circle"
            = link_to @post.user.name, user_path(@post.user), class: "user-name"
          ul.col-4.text-right.post-item-container
            - if current_end_user == @post.user
              - if @post.status == "draft"
                li.card-text.d-inline-block.post-item data-toggle="modal" data-target="#editPostModalToggle"
                  i.fa.fa-edit data-toggle="tooltip" data-placement="right" title="クリックして投稿を編集"
              - if @post.status == "published" or @post.status == "draft"
                li.card-text.d-inline-block.post-item
                  = link_to post_tags_path(@post)
                    i.fas.fa-tags data-toggle="tooltip" data-placement="right" title="クリックしてタグを編集"
              li.card-text.d-inline-block.post-item-delete
                = link_to post_path(@post), method: :delete,data: {"confirm": "本当に削除しますか？\r\nこの操作は取り消せません。\r\n実行後、投稿データは完全に削除されます。"}
                  i.fas.fa-trash-alt data-toggle="tooltip" data-placement="right" title="クリックして投稿を削除"
            .modal.fade#editPostModalToggle tabindex="-1" aria-labelledby="editPostModalToggle" aria-hidden="true"
              .modal-dialog.modal-lg.modal-dialog-centered
                .modal-content
                  .modal-header
                    #editPostModalToggle
                    button.btn.modal-close-btn data-dismiss="modal" aria-label="close"
                      span
                        | ×
                  .modal-body
                    = render "end_user/posts/form", post: @post
                  .modal-footer
                    button.btn.btn-secondary data-dismiss="modal" 閉じる
        .card-body
          p.card-text.post-text
            = @post.text
        .card-body
          .card-img.text-center
            - @post.images.each do |image|
              = link_to image, "data-lightbox": image
                = image_tag image.variant(gravity: :center, resize:"200x200^", crop:"200x200+0+0").processed, class: "d-none d-sm-inline-block"
        .card-body
          .card-text
            - @post.tags.each do |tag|
              = link_to tag.name, search_path(word: tag.name, object: "post_tag"), class: "btn btn-sm btn-dark rounded-pill tag-item"
          .card-text
            = @post.created_at.strftime("%Y年%m月%d日 %H時%M分")
        ul.col-12.text-right.post-item-container
          - if @post.status == "published"
            li.card-text.d-inline-block.post-item
              a data-toggle="modal" data-target="#postComment#{@post.id}ModalToggle" data-link="postComment#{@post.id}ModalToggle"
                i.far.fa-comment.post-item-icon
              = @post.post_comments.count
          - if @post.status == "published" or @post.status == "draft"
            li.card-text.d-inline-block.post-item
              div class="favorite_btn_#{@post.id}"
                = render "end_user/favorites/favorite", post: @post
            li.card-text.d-inline-block.post-item
              = link_to post_path(@post)
                = time_ago_in_words(@post.created_at)
                | 前
        .modal.fade id="postComment#{@post.id}ModalToggle" tabindex="-1" aria-labelledby="postComment#{@post.id}ModalToggle" aria-hidden="true"
          .modal-dialog.modal-lg.modal-dialog-centered
            .modal-content
              .modal-header
                div id="#postComment#{@post.id}ModalToggle"
                button.btn.modal-close-btn data-dismiss="modal" aria-label="close"
                  span
                    | ×
              .modal-body
                = link_to user_path(@post.user), class: "posts-area-user"
                  = image_tag @post.user.user_icon(50, 50), class: "rounded-circle"
                = link_to @post.user.name, user_path(@post.user), class: "user-name"
              .modal-body
                = link_to post_path(@post)
                  p.card-text.post-text
                    = @post.text
              .modal-body.text-center
                  - @post.images.first(4).each do |image|
                    = link_to image, "data-lightbox": image
                      = image_tag image.variant(gravity: :center, resize:"200x200^", crop:"200x200+0+0").processed, class: "d-none d-sm-inline-block"
              .modal-body
                = form_with model: @post_comment, url: post_comments_path(@post) do |f|
                  .form-group
                  = f.text_area :text, placeholder: "コメントを入力", class: "form-control", rows: 5
                  .text-right.mt-3
                    = f.submit "コメントを送信", class: "btn btn-outline-dark rounded-pill"
              .modal-footer
                button.btn.btn-secondary data-dismiss="modal" 閉じる
        .card-body
          = form_with model: [@post, @post_comment], url: post_comments_path(@post) do |f|
            .form-group.text-right
              = f.text_area :text, placeholder: "コメントを入力", class: "form-control", rows: 5
              = f.submit "コメントを送信", class: "btn btn-outline-dark rounded-pill mt-3"
        .scroll-list.jscroll
          - @comments.each do |comment|
            #post-index
              .card.posts-area.rounded-0
                .card-body.row
                  .col-8
                    = link_to user_path(comment.user)
                      = image_tag comment.user.user_icon(50, 50), class: "rounded-circle"
                    = link_to comment.user.name, user_path(comment.user), class: "user-name"
                .card-body
                  p.card-text.post-text
                    = comment.text
                ul.col-12.text-right.post-item-container
                  li.card-text.d-inline-block.post-item
                    = comment.created_at.strftime("%Y年%m月%d日 %H時%M分")
                  li.card-text.d-inline-block.post-item
                    = time_ago_in_words(comment.created_at)
                    | 前
                  li.card-text.d-inline-block.post-item
                    - if comment.user == current_end_user
                      = link_to "削除", post_comment_path(comment.post, comment), method: :delete, class: "post-item-edit-text text-danger",
                      data: {"confirm": "本当に削除しますか？\r\nこの操作は取り消せません。\r\n実行後、投稿データは完全に削除されます。"}
          .skill-list
            = link_to_prev_page @comments, "前のページ", class: "prev d-none"
            = link_to_next_page @comments, "次のページ", class: "next d-none"
